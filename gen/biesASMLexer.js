// Generated from grammar/biesASM.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,14,220,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,
1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,8,3,8,182,8,8,1,9,1,9,1,9,1,9,
3,9,188,8,9,1,10,1,10,5,10,192,8,10,10,10,12,10,195,9,10,1,11,3,11,198,8,
11,1,11,4,11,201,8,11,11,11,12,11,202,1,12,1,12,5,12,207,8,12,10,12,12,12,
210,9,12,1,12,1,12,1,13,4,13,215,8,13,11,13,12,13,216,1,13,1,13,1,208,0,
14,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
1,0,4,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,
9,10,13,13,32,32,266,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,
0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,1,0,0,0,3,34,1,
0,0,0,5,40,1,0,0,0,7,48,1,0,0,0,9,53,1,0,0,0,11,56,1,0,0,0,13,58,1,0,0,0,
15,60,1,0,0,0,17,181,1,0,0,0,19,187,1,0,0,0,21,189,1,0,0,0,23,197,1,0,0,
0,25,204,1,0,0,0,27,214,1,0,0,0,29,30,5,36,0,0,30,31,5,70,0,0,31,32,5,85,
0,0,32,33,5,78,0,0,33,2,1,0,0,0,34,35,5,97,0,0,35,36,5,114,0,0,36,37,5,103,
0,0,37,38,5,115,0,0,38,39,5,58,0,0,39,4,1,0,0,0,40,41,5,112,0,0,41,42,5,
97,0,0,42,43,5,114,0,0,43,44,5,101,0,0,44,45,5,110,0,0,45,46,5,116,0,0,46,
47,5,58,0,0,47,6,1,0,0,0,48,49,5,36,0,0,49,50,5,69,0,0,50,51,5,78,0,0,51,
52,5,68,0,0,52,8,1,0,0,0,53,54,5,91,0,0,54,55,5,93,0,0,55,10,1,0,0,0,56,
57,5,58,0,0,57,12,1,0,0,0,58,59,5,91,0,0,59,14,1,0,0,0,60,61,5,93,0,0,61,
16,1,0,0,0,62,63,5,73,0,0,63,64,5,78,0,0,64,182,5,73,0,0,65,66,5,72,0,0,
66,67,5,76,0,0,67,182,5,84,0,0,68,69,5,80,0,0,69,70,5,79,0,0,70,182,5,80,
0,0,71,72,5,83,0,0,72,73,5,87,0,0,73,182,5,80,0,0,74,75,5,76,0,0,75,76,5,
68,0,0,76,182,5,86,0,0,77,78,5,66,0,0,78,79,5,83,0,0,79,182,5,84,0,0,80,
81,5,66,0,0,81,82,5,76,0,0,82,182,5,68,0,0,83,84,5,65,0,0,84,85,5,68,0,0,
85,182,5,68,0,0,86,87,5,83,0,0,87,88,5,85,0,0,88,182,5,66,0,0,89,90,5,77,
0,0,90,91,5,85,0,0,91,182,5,76,0,0,92,93,5,68,0,0,93,94,5,73,0,0,94,182,
5,86,0,0,95,96,5,78,0,0,96,97,5,69,0,0,97,182,5,71,0,0,98,99,5,83,0,0,99,
100,5,71,0,0,100,182,5,78,0,0,101,102,5,69,0,0,102,182,5,81,0,0,103,104,
5,71,0,0,104,182,5,84,0,0,105,106,5,71,0,0,106,107,5,84,0,0,107,182,5,69,
0,0,108,109,5,76,0,0,109,182,5,84,0,0,110,111,5,76,0,0,111,112,5,84,0,0,
112,182,5,69,0,0,113,114,5,65,0,0,114,115,5,78,0,0,115,182,5,68,0,0,116,
117,5,79,0,0,117,182,5,82,0,0,118,119,5,88,0,0,119,120,5,79,0,0,120,182,
5,82,0,0,121,122,5,78,0,0,122,123,5,79,0,0,123,182,5,84,0,0,124,125,5,83,
0,0,125,126,5,78,0,0,126,182,5,84,0,0,127,128,5,83,0,0,128,129,5,84,0,0,
129,182,5,75,0,0,130,131,5,83,0,0,131,132,5,82,0,0,132,182,5,75,0,0,133,
134,5,67,0,0,134,135,5,65,0,0,135,182,5,84,0,0,136,137,5,84,0,0,137,138,
5,79,0,0,138,182,5,83,0,0,139,140,5,76,0,0,140,141,5,78,0,0,141,182,5,84,
0,0,142,143,5,76,0,0,143,144,5,73,0,0,144,182,5,78,0,0,145,146,5,76,0,0,
146,147,5,84,0,0,147,182,5,75,0,0,148,149,5,76,0,0,149,150,5,82,0,0,150,
182,5,75,0,0,151,152,5,84,0,0,152,153,5,79,0,0,153,182,5,76,0,0,154,155,
5,78,0,0,155,156,5,79,0,0,156,182,5,80,0,0,157,158,5,66,0,0,158,182,5,82,
0,0,159,160,5,66,0,0,160,182,5,84,0,0,161,162,5,66,0,0,162,182,5,70,0,0,
163,164,5,76,0,0,164,165,5,68,0,0,165,182,5,70,0,0,166,167,5,65,0,0,167,
168,5,80,0,0,168,182,5,80,0,0,169,170,5,82,0,0,170,171,5,69,0,0,171,182,
5,84,0,0,172,173,5,67,0,0,173,174,5,83,0,0,174,182,5,84,0,0,175,176,5,73,
0,0,176,177,5,78,0,0,177,182,5,79,0,0,178,179,5,80,0,0,179,180,5,82,0,0,
180,182,5,78,0,0,181,62,1,0,0,0,181,65,1,0,0,0,181,68,1,0,0,0,181,71,1,0,
0,0,181,74,1,0,0,0,181,77,1,0,0,0,181,80,1,0,0,0,181,83,1,0,0,0,181,86,1,
0,0,0,181,89,1,0,0,0,181,92,1,0,0,0,181,95,1,0,0,0,181,98,1,0,0,0,181,101,
1,0,0,0,181,103,1,0,0,0,181,105,1,0,0,0,181,108,1,0,0,0,181,110,1,0,0,0,
181,113,1,0,0,0,181,116,1,0,0,0,181,118,1,0,0,0,181,121,1,0,0,0,181,124,
1,0,0,0,181,127,1,0,0,0,181,130,1,0,0,0,181,133,1,0,0,0,181,136,1,0,0,0,
181,139,1,0,0,0,181,142,1,0,0,0,181,145,1,0,0,0,181,148,1,0,0,0,181,151,
1,0,0,0,181,154,1,0,0,0,181,157,1,0,0,0,181,159,1,0,0,0,181,161,1,0,0,0,
181,163,1,0,0,0,181,166,1,0,0,0,181,169,1,0,0,0,181,172,1,0,0,0,181,175,
1,0,0,0,181,178,1,0,0,0,182,18,1,0,0,0,183,184,5,36,0,0,184,188,3,23,11,
0,185,186,5,36,0,0,186,188,3,21,10,0,187,183,1,0,0,0,187,185,1,0,0,0,188,
20,1,0,0,0,189,193,7,0,0,0,190,192,7,1,0,0,191,190,1,0,0,0,192,195,1,0,0,
0,193,191,1,0,0,0,193,194,1,0,0,0,194,22,1,0,0,0,195,193,1,0,0,0,196,198,
5,45,0,0,197,196,1,0,0,0,197,198,1,0,0,0,198,200,1,0,0,0,199,201,7,2,0,0,
200,199,1,0,0,0,201,202,1,0,0,0,202,200,1,0,0,0,202,203,1,0,0,0,203,24,1,
0,0,0,204,208,5,34,0,0,205,207,9,0,0,0,206,205,1,0,0,0,207,210,1,0,0,0,208,
209,1,0,0,0,208,206,1,0,0,0,209,211,1,0,0,0,210,208,1,0,0,0,211,212,5,34,
0,0,212,26,1,0,0,0,213,215,7,3,0,0,214,213,1,0,0,0,215,216,1,0,0,0,216,214,
1,0,0,0,216,217,1,0,0,0,217,218,1,0,0,0,218,219,6,13,0,0,219,28,1,0,0,0,
8,0,181,187,193,197,202,208,216,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesASMLexer extends antlr4.Lexer {

    static grammarFileName = "biesASM.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'$FUN'", "'args:'", "'parent:'", "'$END'", 
                         "'[]'", "':'", "'['", "']'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, "INSTRUCTION", "ARG", "ID", "INT", "STRING", 
                          "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "INSTRUCTION", "ARG", "ID", "INT", "STRING", 
                      "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesASMLexer.EOF = antlr4.Token.EOF;
biesASMLexer.T__0 = 1;
biesASMLexer.T__1 = 2;
biesASMLexer.T__2 = 3;
biesASMLexer.T__3 = 4;
biesASMLexer.T__4 = 5;
biesASMLexer.T__5 = 6;
biesASMLexer.T__6 = 7;
biesASMLexer.T__7 = 8;
biesASMLexer.INSTRUCTION = 9;
biesASMLexer.ARG = 10;
biesASMLexer.ID = 11;
biesASMLexer.INT = 12;
biesASMLexer.STRING = 13;
biesASMLexer.WS = 14;



